-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.asistente
(
    id_asistente serial NOT NULL,
    nombre_asistente character varying(100) COLLATE pg_catalog."default" NOT NULL,
    apellido_1 character varying(50) COLLATE pg_catalog."default" NOT NULL,
    apellido_2 character varying(50) COLLATE pg_catalog."default" NOT NULL,
    edad_asistente integer NOT NULL,
    is_confirm boolean NOT NULL,
    codigo_registro_registro integer NOT NULL,
    CONSTRAINT asistente_pk PRIMARY KEY (id_asistente)
);

CREATE TABLE IF NOT EXISTS public.chef
(
    id_chef serial NOT NULL,
    nombre_chef character varying(50) COLLATE pg_catalog."default" NOT NULL,
    apellido_1 character varying(50) COLLATE pg_catalog."default" NOT NULL,
    apellido_2 character varying(50) COLLATE pg_catalog."default" NOT NULL,
    edad_chef integer NOT NULL,
    codigo_registro integer NOT NULL,
    CONSTRAINT chef_pk PRIMARY KEY (id_chef)
);

CREATE TABLE IF NOT EXISTS public.clasificacion
(
    id_clasificacion serial NOT NULL,
    nombrechef character varying(50) COLLATE pg_catalog."default" NOT NULL,
    apellido1 character varying(50) COLLATE pg_catalog."default" NOT NULL,
    apellido2 character varying(50) COLLATE pg_catalog."default" NOT NULL,
    plato_popular character varying(50) COLLATE pg_catalog."default" NOT NULL,
    puesto_clasif character varying(10) COLLATE pg_catalog."default" NOT NULL,
    codigo_registro integer NOT NULL,
    id_chef_chef integer NOT NULL,
    CONSTRAINT "Clasificacion_pk" PRIMARY KEY (id_clasificacion)
);

CREATE TABLE IF NOT EXISTS public.contacto_organizador
(
    id_organizador_organizador serial NOT NULL,
    telefono character varying(20) COLLATE pg_catalog."default" NOT NULL,
    email character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT contacto_organizador_pk PRIMARY KEY (id_organizador_organizador)
);

CREATE TABLE IF NOT EXISTS public.ingrediente
(
    codigo_ingredient serial NOT NULL,
    nombre_producto character varying(100) COLLATE pg_catalog."default" NOT NULL,
    cantidad_ing integer NOT NULL,
    unidad character varying(50) COLLATE pg_catalog."default",
    codigo_menu_menu integer NOT NULL,
    codigo_receta_receta integer NOT NULL,
    CONSTRAINT ingredientes_pk PRIMARY KEY (codigo_ingredient)
);

CREATE TABLE IF NOT EXISTS public.many_registro_has_many_organizador
(
    codigo_registro_registro integer NOT NULL,
    id_organizador_organizador integer NOT NULL,
    CONSTRAINT many_registro_has_many_organizador_pk PRIMARY KEY (codigo_registro_registro, id_organizador_organizador)
);

CREATE TABLE IF NOT EXISTS public.menu
(
    codigo_menu serial NOT NULL,
    cant_platos integer NOT NULL,
    id_chef_chef integer NOT NULL,
    id_producto integer NOT NULL,
    CONSTRAINT menu_pk PRIMARY KEY (codigo_menu, id_producto),
    CONSTRAINT menu_uq UNIQUE (id_chef_chef)
);

CREATE TABLE IF NOT EXISTS public.organizador
(
    id_organizador serial NOT NULL,
    nombre_org character varying(50) COLLATE pg_catalog."default" NOT NULL,
    apellido_1 character varying(50) COLLATE pg_catalog."default" NOT NULL,
    apellido_2 character varying(50) COLLATE pg_catalog."default" NOT NULL,
    fecha_nac date NOT NULL,
    edad_org integer NOT NULL,
    is_supervisor boolean NOT NULL,
    CONSTRAINT organizador_pk PRIMARY KEY (id_organizador)
);

CREATE TABLE IF NOT EXISTS public.patrocinador
(
    id_patrocinador serial NOT NULL,
    nombre_patroc character varying(100) COLLATE pg_catalog."default" NOT NULL,
    apellido_1 character varying(50) COLLATE pg_catalog."default" NOT NULL,
    apellido_2 character varying(50) COLLATE pg_catalog."default" NOT NULL,
    edad_patroc integer NOT NULL,
    codigo_registro_registro integer NOT NULL,
    CONSTRAINT patrocinador_pk PRIMARY KEY (id_patrocinador)
);

CREATE TABLE IF NOT EXISTS public.receta
(
    codigo_receta serial NOT NULL,
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    tipo_receta character varying(50) COLLATE pg_catalog."default" NOT NULL,
    codigo_menu_menu integer NOT NULL,
    CONSTRAINT receta_pk PRIMARY KEY (codigo_receta)
);

CREATE TABLE IF NOT EXISTS public.registro
(
    codigo_registro serial NOT NULL,
    cant_chef integer NOT NULL,
    cant_patroc integer NOT NULL,
    cant_asistentes integer NOT NULL,
    plato_popular character varying(100) COLLATE pg_catalog."default" NOT NULL,
    ingred_popular character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT codigo_registro PRIMARY KEY (codigo_registro)
);

ALTER TABLE IF EXISTS public.asistente
    ADD CONSTRAINT registro_fk FOREIGN KEY (codigo_registro_registro)
    REFERENCES public.registro (codigo_registro) MATCH FULL
    ON UPDATE CASCADE
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.chef
    ADD CONSTRAINT codigo_registro FOREIGN KEY (codigo_registro)
    REFERENCES public.registro (codigo_registro) MATCH FULL
    ON UPDATE CASCADE
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.clasificacion
    ADD CONSTRAINT chef_fk FOREIGN KEY (id_chef_chef)
    REFERENCES public.chef (id_chef) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.clasificacion
    ADD CONSTRAINT codigo_registro FOREIGN KEY (codigo_registro)
    REFERENCES public.registro (codigo_registro) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contacto_organizador
    ADD CONSTRAINT organizador_fk FOREIGN KEY (id_organizador_organizador)
    REFERENCES public.organizador (id_organizador) MATCH FULL
    ON UPDATE CASCADE
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS contacto_organizador_uq
    ON public.contacto_organizador(id_organizador_organizador);


ALTER TABLE IF EXISTS public.ingrediente
    ADD CONSTRAINT receta_fk FOREIGN KEY (codigo_receta_receta)
    REFERENCES public.receta (codigo_receta) MATCH FULL
    ON UPDATE CASCADE
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.many_registro_has_many_organizador
    ADD CONSTRAINT organizador_fk FOREIGN KEY (id_organizador_organizador)
    REFERENCES public.organizador (id_organizador) MATCH FULL
    ON UPDATE CASCADE
    ON DELETE RESTRICT;


ALTER TABLE IF EXISTS public.many_registro_has_many_organizador
    ADD CONSTRAINT registro_fk FOREIGN KEY (codigo_registro_registro)
    REFERENCES public.registro (codigo_registro) MATCH FULL
    ON UPDATE CASCADE
    ON DELETE RESTRICT;


ALTER TABLE IF EXISTS public.menu
    ADD CONSTRAINT chef_fk FOREIGN KEY (id_chef_chef)
    REFERENCES public.chef (id_chef) MATCH FULL
    ON UPDATE CASCADE
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS menu_uq
    ON public.menu(id_chef_chef);


ALTER TABLE IF EXISTS public.menu
    ADD FOREIGN KEY (codigo_menu)
    REFERENCES public.ingrediente (codigo_ingredient) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.patrocinador
    ADD CONSTRAINT registro_fk FOREIGN KEY (codigo_registro_registro)
    REFERENCES public.registro (codigo_registro) MATCH FULL
    ON UPDATE CASCADE
    ON DELETE SET NULL;

END;